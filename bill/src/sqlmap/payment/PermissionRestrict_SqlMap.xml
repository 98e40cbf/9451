<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="x.y.z.bill.mapper.payment.PermissionRestrictDAO" >
  <resultMap id="BaseResultMap" type="x.y.z.bill.model.payment.PermissionRestrict" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="txnId" property="txnId" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="bankCardNo" property="bankCardNo" jdbcType="VARCHAR" />
    <result column="businessCode" property="businessCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="tips" property="tips" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="lastModifyTime" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, txnId, userId, userName, bankCardNo, businessCode, status, tips, remark, createTime, 
    lastModifyTime, version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_payment_permission_restrict
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="x.y.z.bill.model.payment.PermissionRestrict" >
    insert into t_payment_permission_restrict (id, txnId, userId, 
      userName, bankCardNo, businessCode, 
      status, tips, remark, 
      createTime, lastModifyTime, version
      )
    values (#{id,jdbcType=BIGINT}, #{txnId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{userName,jdbcType=VARCHAR}, #{bankCardNo,jdbcType=VARCHAR}, #{businessCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{tips,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="x.y.z.bill.model.payment.PermissionRestrict" >
    insert into t_payment_permission_restrict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="txnId != null" >
        txnId,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="bankCardNo != null" >
        bankCardNo,
      </if>
      <if test="businessCode != null" >
        businessCode,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="tips != null" >
        tips,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="lastModifyTime != null" >
        lastModifyTime,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="txnId != null" >
        #{txnId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNo != null" >
        #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="businessCode != null" >
        #{businessCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="x.y.z.bill.model.payment.PermissionRestrict" >
    update t_payment_permission_restrict
    <set >
      <if test="txnId != null" >
        txnId = #{txnId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNo != null" >
        bankCardNo = #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="businessCode != null" >
        businessCode = #{businessCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="tips != null" >
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        lastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="x.y.z.bill.model.payment.PermissionRestrict" >
    update t_payment_permission_restrict
    set txnId = #{txnId,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=BIGINT},
      userName = #{userName,jdbcType=VARCHAR},
      bankCardNo = #{bankCardNo,jdbcType=VARCHAR},
      businessCode = #{businessCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      tips = #{tips,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      lastModifyTime = #{lastModifyTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>